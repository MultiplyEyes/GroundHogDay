:root{
    --clockframe: #FAF9F6;
    --clockinner: #3B312B;
    --clockpage: #CDC0B9;
    
    --banner: #e7a77a;


    --height: 400px;
    --width: calc(var(--height) * 2);
    --depth: calc(var(--height));


}

/* To get the 3d shape of the clock is used chat gpt */
/* the questions : "How to get 3d box shape with just css and html" */

body {
    background-color: var(--banner);
}

section:has(div) {

    width: var(--width);
    height: var(--height);

    perspective: 1000px; /* Adds depth */

    position: absolute;
    top: calc(50% - var(--height)/2);
    left: calc(50% - var(--width)/2);

    /* While trying to convert the chatgpt code to CSS nesting Christian helped with this dumb issue */
    & > div {
        /* clock */
        position: absolute;
        transform-style: preserve-3d;

        transform: rotateX(0deg) rotateY(-20deg);

        /* all faces */
        & > div {
            position: absolute;

            background-color: var(--clockframe);
            border: 2px solid #000;

            text-align: center;
            line-height: var(--height);

            font-size: 20px;
            font-weight: bold;
            color: black;
        }

        /* height and widht of faces */
        /* front and back */
        & > div:nth-child(1), & > div:nth-child(2) {
            width: var(--width);
            height: var(--height);
        }

        /* left and right */
        & > div:nth-child(3), & > div:nth-child(4) {
            width: var(--depth);
            height: var(--height);
        }

        /* top and bottom */
        & > div:nth-child(5), & > div:nth-child(6) {
            width: var(--width);
            height: var(--depth);
        }

        /* The faces of the clock */
        /* front */
        & > div:nth-child(1) {
            transform: translateZ(calc(var(--depth)/2));
        }
        /* back */
        & > div:nth-child(2) {
            transform: rotateY(180deg) translateZ(calc(var(--depth)/2));
        }
        /* left */
        & > div:nth-child(3) {
            transform: rotateY(-90deg) translateZ(calc(var(--height) / 2));
        }
        /* right */
        & > div:nth-child(4) {
            transform: rotateY(90deg) translateZ(calc(var(--height) * 1.5));
        }
        /* top */
        & > div:nth-child(5) {
            transform: rotateX(90deg) translateZ(calc(var(--height)/2));
        }
        /* bottom */
        & > div:nth-child(6) {
            transform: rotateX(-90deg) translateZ(calc(var(--height)/2)); 
        }
    }
}